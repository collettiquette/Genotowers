{
  "name": "astquery",
  "version": "0.0.11",
  "description": "Use css-like selectors for walking over AST-tree",
  "main": "./build/es5/ASTQuery.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/termi/ASTQuery.git"
  },
  "dependencies": {},
  "devDependencies": {
    "es6-transpiler": "latest",
    "nodeunit": "latest"
  },
  "keywords": [
    "ast-alter",
    "ast",
    "query",
    "css-query"
  ],
  "scripts": {
    "test": "node build/test/index.js"
  },
  "author": {
    "name": "Egor Khalimonenko",
    "email": "1+ASTQuery@h123.ru"
  },
  "license": "MIT",
  "readme": "# ASTQuery\r\n\r\nUse css-like selectors for walking over AST-tree\r\n\r\n## Example\r\n\r\n```javascript\r\nvar ast = esprima.parse('function test(){ var a, b = 0; a = 1; a += 2; b++; b--; };test();');\r\nvar astQuery = new ASTQuery(ast, 'es5');\r\nastQuery.on({\r\n\tprint: function(node, message) {\r\n\t\tconsole.log('node type is ' + node.type + ' | ' + message)\r\n\t}\r\n\r\n\t, ':: FunctionDeclaration': function(node) {\r\n\t\tthis.print(node, '1| ');\r\n\t}\r\n\r\n\t, ':: VariableDeclarator': function(node) {\r\n\t\tthis.print(node, '2| ' + node.id.name);\r\n\t}\r\n\r\n\t, ':: AssignmentExpression[operator=\"=\"]': function(node) {\r\n\t\tthis.print(node, '3| ' + node.left.name + \"|\" + node.operator);\r\n\t}\r\n\r\n// TODO::\r\n//\t, ':: UpdateExpression[operator=\"++\"]': function(node) {\r\n//\t\tthis.print(node, '4| ' + node.argument.name + \"|\" + node.operator);\r\n//\t}\r\n\r\n// TODO::\r\n//\t, ':: :other': function(node) {\r\n//\t\tconsole.log('  untouched node type is ' + node.type);\r\n//\t}\r\n}, {prefix: '::'});\r\n\r\nastQuery.apply();\r\n\r\n// console output is:\r\n// > node type is FunctionDeclaration | 1|\r\n// > node type is VariableDeclarator | 2| a\r\n// > node type is VariableDeclarator | 2| b\r\n// > node type is AssignmentExpression | 3| a|=\r\n\r\n```\r\n\r\nTODO\r\n\r\n1. ':other' pseudo-class\r\n1. complex selector's support ('tag>tag')\r\n1. classes support with API to adding class description\r\n1. es6 'query' string template tag (astQuery.query`VariableDeclarator:${function(node){ return node.id.name == 'a' }}`)\r\n1. 'removeListener'\r\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/termi/ASTQuery/issues"
  },
  "_id": "astquery@0.0.11",
  "dist": {
    "shasum": "d4ef319283ebd11172ab7400c6665d454a9c1aa6"
  },
  "_from": "astquery@latest",
  "_resolved": "https://registry.npmjs.org/astquery/-/astquery-0.0.11.tgz"
}
