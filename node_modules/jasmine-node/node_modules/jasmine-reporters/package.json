{
  "author": {
    "name": "Larry Myers"
  },
  "name": "jasmine-reporters",
  "description": "Reporters for the Jasmine BDD Framework",
  "version": "1.0.2",
  "homepage": "https://github.com/larrymyers/jasmine-reporters",
  "maintainers": "Ben Loveridge <bloveridge@gmail.com>",
  "repository": {
    "type": "git",
    "url": "git://github.com/larrymyers/jasmine-reporters.git"
  },
  "main": "./src/load_reporters.js",
  "dependencies": {
    "mkdirp": "~0.3.5"
  },
  "devDependencies": {},
  "licenses": [
    {
      "type": "MIT",
      "url": "https://raw.github.com/larrymyers/jasmine-reporters/master/LICENSE"
    }
  ],
  "readme": "This branch is for Jasmine 1.x.\n[Switch to the 2.x branch.](https://github.com/larrymyers/jasmine-reporters)\n\n# Jasmine Reporters\n\nJasmine Reporters is a collection of javascript jasmine.Reporter classes that can be used with\nthe [JasmineBDD testing framework](http://jasmine.github.io/).\n\nIncluded reporters:\n\n* ConsoleReporter - Report test results to the browser console.\n* JUnitXmlReporter - Report test results to a file in JUnit XML Report format.\n* NUnitXmlReporter - Report test results to a file in NUnit XML Report format.\n* TapReporter - Test Anything Protocol, report tests results to console.\n* TeamcityReporter - Basic reporter that outputs spec results to for the Teamcity build system.\n* TerminalReporter - Logs to a terminal (including colors) with variable verbosity.\n\n## Usage\n\nExamples are included in the test directory that show how to use the reporters,\nas well a basic runner scripts for Rhino + envjs, and a basic runner for\n[PhantomJS](https://github.com/ariya/phantomjs). Either of these methods could\nbe used in a Continuous Integration project for running headless tests and\ngenerating JUnit XML output.\n\n### Rhino + EnvJS\n\nEverything needed to run the tests in Rhino + EnvJS is included in this\nrepository inside the `ext` directory, specifically Rhino 1.7r2 and envjs 1.2\nfor Rhino.\n\n### PhantomJS\n\nShould work in most versions of PhantomJS > 1.4.1\nI have used PhantomJS 1.4.1 through 1.9.6 on Mac OS X with no problems.\n\n### Node.js\n\nMost of these reporters also work in node.js by making use of the excellent\n[jasmine-node project](https://github.com/mhevery/jasmine-node).\n\n# Protractor\n\nProtractor 1.6.0 or above allows you to use either Jasmine 1 or Jasmine 2.\nIf you are using Jasmine 1, make sure you install a 1.x-compatible version of jasmine-reporters:\n\n    npm install --save-dev jasmine-reporters@^1.0.0\n\nThen set everything up inside your protractor.conf:\n\n    onPrepare: function() {\n        // The require statement must be down here, since jasmine-reporters@1.0\n        // expects jasmine to be in the global and protractor does not guarantee\n        // this until inside the onPrepare function.\n        require('jasmine-reporters');\n        jasmine.getEnv().addReporter(\n            new jasmine.JUnitXmlReporter('xmloutput', true, true)\n        );\n    }\n",
  "readmeFilename": "README.markdown",
  "bugs": {
    "url": "https://github.com/larrymyers/jasmine-reporters/issues"
  },
  "_id": "jasmine-reporters@1.0.2",
  "_from": "jasmine-reporters@~1.0.0"
}
